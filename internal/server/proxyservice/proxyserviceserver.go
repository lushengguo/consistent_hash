// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: consistent_hash.proto

package server

import (
	"context"

	"consistent_hash/consistent_hash/proto"
	"consistent_hash/internal/logic/proxyservice"
	"consistent_hash/internal/svc"
)

type ProxyServiceServer struct {
	svcCtx *svc.ServiceContext
	proto_consistent_hash.UnimplementedProxyServiceServer
}

func NewProxyServiceServer(svcCtx *svc.ServiceContext) *ProxyServiceServer {
	return &ProxyServiceServer{
		svcCtx: svcCtx,
	}
}

// those three apis are for client usage
func (s *ProxyServiceServer) GetValue(ctx context.Context, in *proto_consistent_hash.GetValueRequest) (*proto_consistent_hash.GetValueResponse, error) {
	l := proxyservicelogic.NewGetValueLogic(ctx, s.svcCtx)
	return l.GetValue(in)
}

func (s *ProxyServiceServer) SetKV(ctx context.Context, in *proto_consistent_hash.SetKVRequest) (*proto_consistent_hash.SetKVResponse, error) {
	l := proxyservicelogic.NewSetKVLogic(ctx, s.svcCtx)
	return l.SetKV(in)
}

func (s *ProxyServiceServer) DeleteKey(ctx context.Context, in *proto_consistent_hash.DeleteKeyRequest) (*proto_consistent_hash.DeleteKeyResponse, error) {
	l := proxyservicelogic.NewDeleteKeyLogic(ctx, s.svcCtx)
	return l.DeleteKey(in)
}

// redirect all kinds of message
func (s *ProxyServiceServer) RedirectGossipMessage(ctx context.Context, in *proto_consistent_hash.RedirectGossipMessageRequest) (*proto_consistent_hash.RedirectGossipMessageResponse, error) {
	l := proxyservicelogic.NewRedirectGossipMessageLogic(ctx, s.svcCtx)
	return l.RedirectGossipMessage(in)
}

func (s *ProxyServiceServer) GetAllServerInfo(ctx context.Context, in *proto_consistent_hash.Empty) (*proto_consistent_hash.Gossip, error) {
	l := proxyservicelogic.NewGetAllServerInfoLogic(ctx, s.svcCtx)
	return l.GetAllServerInfo(in)
}
